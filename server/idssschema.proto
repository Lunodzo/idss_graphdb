syntax = "proto3"; 

package common;

option go_package = "idss/graphdb/common";

// QueryMessage represents a query being propagated in the network
message QueryMessage {
    string query = 1;
    string uqi = 2;
    int32 ttl = 3;
}

// QueryResult represents the result of a query
message QueryResult {
    string peer_id = 1;
    repeated Row result = 2;
    repeated string labels = 3;
    string error = 4;
    QueryState query_state = 5;
}

message QueryState {
    enum State {
        QUEUED = 0;
        LOCALLY_EXECUTED = 1;
        COMPLETED = 2;
        SENT_BACK = 3;
        FAILED = 4;
    }

    State state = 1;
    repeated Row result = 2; // Optional, to store intermediate/final results if needed
}

// Row represents a single row in the query result
message Row {
    repeated string data = 1;
}

/* 
COMPILATION COMMAND
protoc --proto_path=. --go_out=. --go_opt=paths=source_relative idssschema.proto
*/