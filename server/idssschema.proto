/*
 * ! \file idssschema.proto
 * ! \brief A file that contains the protocol buffer definition for the messages that are exchanged between the nodes in the network.
 *
 * Copyright 2023-2027, University of Salento, Italy.
 * All rights reserved.
 */

syntax = "proto3";

package common;

option go_package = "idss/graphdb/common"; // The package name for the generated Go code

enum MessageType {
    QUERY = 0;
    RESULT = 1;
}

// QueryMessage represents a query being propagated in the network
message QueryMessage {
    MessageType type = 1;  // To distinguish between QUERY and RESULT.
    string query = 2; // The query to be executed
    string uqid = 3; // Unique query identifier
    string timestamp = 11; // Timestamp of the query
    float ttl = 4; // Time to live
    string sender = 5; // The peer_id of the sender
    string originator = 6; // The peer_id of the originator
    QueryState state = 7; // The state of the query
    repeated string labels = 8; // The labels of the query
    repeated Row result = 9; // The result of the query
    string error = 10; // Error message if any
    int32 record_count = 12; // Number of records in the result
}

message QueryState {
    enum State {
        QUEUED = 0; // The query is in the queue
        LOCALLY_EXECUTED = 1; // The query is executed locally
        COMPLETED = 2; // The query is completed
        SENT_BACK = 3; // Query result is sent back to the parent node
        FAILED = 4; // The query failed
    }

    State state = 1;
    repeated Row result = 2; // Optional, to store intermediate/final results if needed
}

// Row represents a single row in the query result
message Row {
    repeated string data = 1;
}

/* 
COMPILATION COMMAND
protoc --proto_path=. --go_out=. --go_opt=paths=source_relative idssschema.proto
*/